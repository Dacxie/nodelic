// Generated by CoffeeScript 1.4.0
(function() {
  var en, hs, rq, vs;

  vs = '0.1.1';

  hs = require('http-sync');

  en = require('utf8');

  rq = function(path, data) {
    var r;
    try {
      r = JSON.parse(hs.request({
        method: 'POST',
        headers: {
          'User-Agent': "Nodelic/" + vs
        },
        body: en.encode(JSON.stringify(data)),
        protocol: 'http',
        host: 'chatadelic.net',
        port: 80,
        path: path
      }).end().body.toString());
      return r;
    } catch (error) {
      console.log("Error in .rq(" + path + ", " + data + ")");
      return {
        error: 1
      };
    }
  };

  exports.api = {
    path: {
      login: '/login/chatLogin',
      action: '/server/ajax/action',
      listen: '/server/ajax/listen'
    },
    login: function(name, pass, chat) {
      return rq(this.path.login, {
        act: 'login',
        chat: chat,
        login: name,
        password: pass
      });
    },
    logout: function(skey, chat) {
      return rq(this.path.action, {
        act: 'logout',
        chat: chat,
        _: skey
      });
    },
    msg: function(skey, chat, msg) {
      return rq(this.path.action, {
        act: 'msg',
        chat: chat,
        _: skey,
        msg: msg
      });
    },
    listen: function(skey, chat) {
      return rq(this.path.listen, {
        act: 'listen',
        chat: chat,
        _: skey
      });
    },
    status: function(skey, chat, status) {
      return rq(this.path.action, {
        act: 'setStatus',
        chat: chat,
        _: skey,
        status: status
      });
    },
    color: function(skey, chat, color) {
      return rq(this.path.action, {
        act: 'saveChatSettings',
        chat: chat,
        _: skey,
        settings: {
          textColor: color
        }
      });
    },
    kick: function(skey, chat, who, why) {
      return rq(this.path.action, {
        act: 'moder',
        chat: chat,
        _: skey,
        name: who,
        why: why,
        moderCommand: 'kick'
      });
    },
    ban: function(skey, chat, who, why, time, clear) {
      return rq(this.path.action, {
        act: 'moder',
        chat: chat,
        _: skey,
        name: who,
        why: why,
        time: time,
        ban: true,
        deleteMessages: clear,
        moderCommand: 'ban'
      });
    },
    warn: function(skey, chat, who, why) {
      return rq(this.path.action, {
        act: 'moder',
        chat: chat,
        _: skey,
        name: who,
        why: why,
        moderCommand: 'warn'
      });
    }
  };

}).call(this);
